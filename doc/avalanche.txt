//******************************************************************************
//******************************************************************************
void do_proj_rain_zap(void) 
{
	PROCESS *ptemp;
	OBJECT *obj=current_proc->pa8;

	zap_init(ZINIT_SPEC_ACT,ACT_RAIN_ZAP,0,obj);

	ochar_sound(9);
	
	animate2_a9(3,ANIM_RAIN_CLOUD);
	
	create_proj_proc(rain_zap_proc);
	
	do_proj_sitting_duck(0x30);
	mframew(3);
	
 	reaction_exit(obj);
}

void rain_zap_proc(void) 
{
	OBJECT *obj=current_proc->pa8;
	
	find_ani2_part_a14(ANIM_RAIN_CLOUD,3);

	tell_world_stk(0x1d);
	
	if (generic_prezap(SCX(0x48)+12,SCY(0x30)+5,SCX(0x28),SCY(0x14),0x1d,3)==SYSTEM_CARRY_SET)
	{
		
		multi_adjust_xy(obj,-SCX(0x50),SCY(0));
		goto RAIN_HIT;
	}
		
	if (generic_prezap(SCX(0x5e)+12,SCY(0x30)+5,SCX(0x2c),SCY(0x14),0x1d,3)==SYSTEM_CARRY_SET)
	{
		
		multi_adjust_xy(obj,-SCX(0x40),SCY(0));
		goto RAIN_HIT;
	}
		
	if (generic_prezap(SCX(0x64)+32,SCY(0x30)+5,SCX(0x34),SCY(0x14),0x1d,3)==SYSTEM_CARRY_SET)
	{
		
		multi_adjust_xy(obj,-SCX(0x38),SCY(0));
		goto RAIN_HIT;
	}
	
	set_proj_vel(obj,SCX(0xa0000),3);
	projectile_flight(current_proc,obj,0x1d);
	stop_a8(obj);
	multi_adjust_xy(obj,-SCX(0x18),SCY(0));

RAIN_HIT:
	stop_a8(obj);
	
	/* rzp, rain hit */
	create_fx(FX_SONYA_GLOBE);
	
	dead_projectile(current_proc);

	stop_me(obj);
	ochar_sound(0xd);
	
	process_sleep(2);
	
	if (get_his_action(current_proc)==ACT_REACT_STORM)
	{
		/* create movement process */
		CREATE(PID_RAIN_PLACE,rain_movement)->pdata.p_store5=(ADDRESS)(current_proc->pdata.p_otherproc)->pdata.p_otherproc; // point to controller 
	}
	
	set_proj_vel(obj,SCX(0x20000),0);
	find_ani2_part_a14(ANIM_RAIN_CLOUD,4);
	mframew(5);
	
	delete_proj_and_die(obj);
}

WORD generic_prezap(short pa1x,short pa1y,short pa2x,short pa2y,WORD strk,WORD sleep) 
{
	do_next_a9_frame(current_proc->pa8);

	process_sleep(sleep);

	if (local_strike_check_box(strk,pa1x,pa1y,pa2x,pa2y)==SYSTEM_CARRY_SET)
		return(SYSTEM_CARRY_SET);
	else return(SYSTEM_CARRY_CLR);
}

WORD rain_shake(OBJECT *obj,short pixel,WORD shakes,WORD sleep) 
{
	WORD stimer;
	
	do
	{
		obj->oxpos.u.intpos+=pixel;
		obj->oypos.u.intpos+=pixel;
		stimer=sleep;
		do
		{
			process_sleep(1);
			if (get_his_action(current_proc)!=ACT_RAIN_HOLD)
				return(SYSTEM_CARRY_SET);
		}
		while(--stimer>0);

		borrow_ochar_sound(0xc,FT_JADE);
		
		obj->oxpos.u.intpos-=pixel;
		obj->oypos.u.intpos-=pixel;
		stimer=sleep;
		do
		{
			process_sleep(1);
			if (get_his_action(current_proc)!=ACT_RAIN_HOLD)
				return(SYSTEM_CARRY_SET);
		}
		while(--stimer>0);
	}
	while(--shakes>0);

	return(SYSTEM_CARRY_CLR);
}

void r_rain_zap(void) 	
{
	OBJECT *obj=current_proc->pa8;

	reaction_start(REACT_START,NULL,0,NULL);
	
	current_proc->pdata.p_action=ACT_REACT_STORM;
	
	get_char_ani(ANIM_TABLE1,ANIM_KDOWN);
	do_next_a9_frame(obj);
	
	rsnd_enemy_boom();
	
	shake_a8_up(obj,5,5,3,6);

	if (is_he_joy()==SYSTEM_CARRY_SET)
	{
		if (get_my_strength(obj)!=0 && get_his_action(current_proc)==ACT_RAIN_HOLD) 
		{
			current_proc->a10=2;
			do
			{
				if (rain_shake(obj,5,2,7)==SYSTEM_CARRY_SET);
					break;
			} 
			while (--current_proc->a10>0);
		}
	}
	else
	{
		//-DHS- have drone do something
	}
	
	current_proc->pdata.p_action=ACT_STORM_OVER;
	
	process_sleep(8);			
	
	if (am_i_airborn(obj)==SYSTEM_CARRY_SET)
	{
		/* airborn landing */
		flight(obj,SCX(0x0000),SCY(0x0000),SCY(0xa000),NEVER_ANI,-1);
		land_on_my_back();
	}
	else
	{
		/* ground landing */
		ground_player(obj);
	}

	reaction_exit(obj);
}

void rain_hold(void) 
{
	PROCESS *ptemp;
	ptemp=(PROCESS *)current_proc->a10;

	stop_me(current_proc->pa8);	
	stance_setup();
	current_proc->pdata.p_action=ACT_RAIN_HOLD;
	
	do
	{
		process_sleep(1);
	}
	while(ptemp->p_comp_flag==PC_RAIN_HOLD);
	
	reaction_exit(current_proc->pa8);
}

void rain_movement(void)
{
	OBJECT *obj=current_proc->pa8;
	OBJECT *other;
	PROCESS *pthrower=(PROCESS*)current_proc->pdata.p_store5;
	PROCESS *ptemp;
	WORD ta10=0;
	WORD stimer=1;

	/* link up correctly */
	current_proc->pdata.p_otherguy=pthrower->pdata.p_otherguy;
	current_proc->pdata.p_otherproc=pthrower->pdata.p_otherproc;
	
	/* place him in a holding pattern */
	lights_on_slam();

	/* make other dude wait */
	other=current_proc->pdata.p_otherguy;

	/* put rain in ready stance */
	fastxfer(pthrower,rain_hold);
	pthrower->a10=(ADDRESS)current_proc;

	/* move dude */
	current_proc->a10=0;
	do
	{
		current_proc->p_comp_flag=PC_RAIN_HOLD;
		process_sleep(1);
		current_proc->p_comp_flag=PC_CLEAR;

		if (current_proc->a10!=0)
			current_proc->a10--;

		ta10=current_proc->a10;
		
		if (--stimer==0) 
		{
			borrow_ochar_sound(0xc,FT_JADE);
			stimer=14;
		}

		/* check joy stick */
		if (JOYSTICK_IN_A0(pthrower) & MASK_JUP && current_proc->a10==0)
		{
			/* going up */
			ta10=4;
			other->oypos.u.intpos-=12;
			if (other->oypos.u.intpos<worldtly.u.intpos-32)
				other->oypos.u.intpos=worldtly.u.intpos-32;
		}
		else
		{
			if (JOYSTICK_IN_A0(pthrower) & MASK_JDOWN && current_proc->a10==0)
			{
				/* going down */
				ta10=4;
				other->oypos.u.intpos+=12;
				if (other->oypos.u.intpos>=(pthrower->pdata.p_otherproc)->pdata.p_ganiy)
					other->oypos.u.intpos=(pthrower->pdata.p_otherproc)->pdata.p_ganiy;
			}
		}

		if (JOYSTICK_IN_A0(pthrower) & MASK_JRIGHT && current_proc->a10==0)
		{
			/* going right */
			ta10=4;
			other->oxpos.u.intpos+=12;
			if (other->oxpos.u.intpos>(worldtlx.u.intpos+SCRRGT-SCROLL_GRACE_SIZE))
				other->oxpos.u.intpos=(worldtlx.u.intpos+SCRRGT-SCROLL_GRACE_SIZE);
		}
		else
		{
			if (JOYSTICK_IN_A0(pthrower) & MASK_JLEFT && current_proc->a10==0)
			{
				/* going left */
				ta10=4;
				other->oxpos.u.intpos-=12;
				if (other->oxpos.u.intpos<(worldtlx.u.intpos+SCROLL_GRACE_SIZE))
					other->oxpos.u.intpos=(worldtlx.u.intpos+SCROLL_GRACE_SIZE);
			}
		}

		current_proc->a10=ta10;
	}
	while(get_his_action(current_proc)==ACT_REACT_STORM);

	process_suicide();
}

//***************************************************************
void do_proj_noob_zap(void) 
{
	OBJECT *obj=current_proc->pa8;

	zap_init(ZINIT_SPEC_ACT,ACT_NOOB_ZAP,0,obj);

	borrow_ochar_sound(0x2,FT_LIA);
	animate2_a9(0x4,ANIM_NOOB_ZAP);
	create_proj_proc(noob_zap_proc);

	do_proj_sitting_duck(0x23);
	
	mframew(4);
	reaction_exit(current_proc->pa8);
}

void noob_zap_proc(void)
{
	OBJECT *obj=current_proc->pa8;
	short temp;

	find_ani2_part_a14(ANIM_NOOB_ZAP,3);					// sphere fly (glow)

	tell_world_stk(0x1b);
	
	if (generic_prezap(0x40,0x34,SCX(0x34),SCY(0xc),0x1b,3)==SYSTEM_CARRY_SET)
		goto NOOB_HIT;
		
	if (generic_prezap(0x70,0x34,SCX(0x34),SCY(0xc),0x1b,3)==SYSTEM_CARRY_SET)
		goto NOOB_HIT;
		
	set_proj_vel(obj,SCX(0xa0000),3);				// proj xvel
	current_proc->a6=NULL;
	projectile_flight_call(obj,0x1b); 				// return = hit
	
NOOB_HIT:
	set_proj_vel(obj,SCX(0xa0000),3);				// proj xvel
	
	/* nzp8, sphere hit !!! */
	dead_projectile(current_proc);

	obj->ozval=FRONT_Z;

	if (f_block==0)
	{
		/* sphere hit --> disspate */
		borrow_ochar_sound(0x3,FT_LIA);

		stop_a8(obj);
		
		find_ani2_part_a14(ANIM_NOOB_ZAP,4);	// hit animations
		mframew(3);		
		delete_proj_and_die(obj);
	}

	/* hat blocked */
	borrow_ochar_sound(0x4,FT_LIA);

	find_ani2_part_a14(ANIM_NOOB_ZAP,3);			// angle fly

	init_anirate(4);

	obj->oyvel.pos=-SCY(0x50000);
	flip_multi(obj);
	multi_adjust_xy(obj,-SCX(0xa0),-SCY(0x08));

	obj->oxvel.pos=-obj->oxvel.pos;

	/* spherepc */
	do
	{
		next_anirate();
		process_sleep(1);
	}
	while(proj_onscreen_test(obj)==SYSTEM_CARRY_SET);

	delete_proj_and_die(obj);
}

WORD q_am_i_noob_zap(void)
{
	WORD pid;
	PROCESS *pa0;

	pid=(current_proc->pa8==p1_obj)?PID_NOOB_ZAP_FLASH1:PID_NOOB_ZAP_FLASH2;
	pa0=process_exist(pid,-1);
	if (pa0!=NULL && pa0->pa8==current_proc->pa8)
	{
		current_proc->a0=(ADDRESS)pa0;
		q_yes;
	}
	
	q_no;
}

WORD q_is_he_noob_zap(void)
{
	WORD pid;
	PROCESS *pa0;

	pid=(current_proc->pa8==p2_obj)?PID_NOOB_ZAP_FLASH1:PID_NOOB_ZAP_FLASH2;
	pa0=process_exist(pid,-1);
	if (pa0!=NULL && pa0->pa8==current_proc->pdata.p_otherguy)
	{
		current_proc->a0=(ADDRESS)pa0;
		q_yes;
	}
	
	q_no;
}


#define NOOB_DAMAGE	0xf

void noobed(void) 
{
	OBJECT *obj=current_proc->pa8;
	
	ground_player(obj);
	find_ani_part2(ANIM_KDOWN);
	do_next_a9_frame(obj);
	group_sound(2);
	rsnd_ground();
	shake_a11(8,8);
	
	current_proc->pdata.p_action=ACT_SLAM_BOUNCE;
	damage_to_me(NOOB_DAMAGE,obj);
	inc_p_hit();
	
	set_quarter_damage(obj);
	flight(obj,SCX(0x30000),-SCY(0xa0000),SCY(0x8000),4,-1);
	land_on_my_back();
}

void noob_hyperslam_fatality(OBJECT *oa10);

void noob_hit(void) 
{
	OBJECT *obj=current_proc->pa8;
	OBJECT *oa10;
	PROCESS *pother=current_proc->pdata.p_otherproc;
	WORD stk_a0,stk_a1;
	WORD fatalflag=current_proc->pdata.p_store1;
	
	face_opponent(obj);
	pose_a9(0,ANIM_THROW);
	
	stk_a0=pother->pdata.p_hit;
	stk_a1=pother->pdata.p_damage;
	
	pother->pdata.p_damage=0;
	pother->pdata.p_hit=0;
	body_slam_init(obj);
	
	oa10=(OBJECT*)current_proc->a10;
	
	pother->pdata.p_hit=stk_a0;
	pother->pdata.p_damage=NOOB_DAMAGE+stk_a1;
	
	obj->oyvel.pos=-SCY(0x80000);
	oa10->oyvel.pos=-SCY(0x80000);
	
	get_char_ani(ANIM_TABLE1,ANIM_THROW);
	mframew(1);
	double_next_a9();
	process_sleep(2);
	double_next_a9();
	process_sleep(2);
	
	obj->ograv.pos=oa10->ograv.pos=SCY(0x14000);
	
	/* drop below ground */
	do
	{
		process_sleep(1);
		sans_repell_3();
		
		if (obj->oyvel.pos>=0) 
		{
			oa10->oxvel.pos=obj->oxvel.pos;
			oa10->oyvel.pos=obj->oyvel.pos;
		}
	}
	while(abs(obj->oypos.u.intpos-current_proc->pdata.p_ganiy)<SCY(0x50));
	
	obj->oypos.u.intpos-=SCRBOT+SCY(0x40);
	oa10->oypos.u.intpos-=SCRBOT+SCY(0x40);
	
	/* noobs3 */
	do
	{
		process_sleep(1);
		sans_repell_3();
		oa10->oxvel.pos=obj->oxvel.pos;
		oa10->oyvel.pos=obj->oyvel.pos;
	}
	while(current_proc->pdata.p_ganiy>obj->oypos.u.intpos);
	
	if (fatalflag==1)
		noob_hyperslam_fatality(oa10);
		
	stop_him(oa10);
	
	takeover_him(noobed);
	
	stop_me(obj);
	ground_player(obj);
	reaction_exit(obj);
}

void prop_do_noob_slam(void) 
{
	OBJECT *obj=current_proc->pa8;
	
	init_special_act(ACT_NOOB_TELESLAM,obj);			// i cant block
	
	ochar_sound(4);
	
	create_fx(FX_TRAIL);
	
	get_char_ani(ANIM_TABLE1,ANIM_VICTORY);
	do_next_a9_frame(obj); 
	init_anirate(2);
	
	obj->oyvel.pos=-SCY(0x80000);
	obj->ograv.pos=-SCY(0x10000);
	away_x_vel(current_proc,obj,1);		// fool out trail effect
	
	/* nt4 */
	do
	{
		process_sleep(1);
		next_anirate();
	}
	while(distance_off_ground(current_proc,obj)<SCY(0xe8));
	
	teleport_next_to();
	face_opponent(obj);
	
	obj->oypos.u.intpos=ground_y-SCY(0x60);
	
	obj->ograv.pos=SCY(0x8000);
	obj->oyvel.pos=-SCY(0xa0000);
	away_x_vel(current_proc,obj,0);		// fool out trail effect
	
	/* nt6 */
	do
	{
		process_sleep(1);
	}
	while((obj->oypos.u.intpos-SCY(0x10))>current_proc->pdata.p_ganiy);
	
	get_char_ani(ANIM_TABLE1,ANIM_VICTORY);
	
	face_opponent(obj);
	pose_a9(0,ANIM_THROW);
	
	/* noob drop */
NOOB_DROP:	
	do
	{
		process_sleep(1);
		if (obj->oyvel.pos<0 && (current_proc->pdata.p_otherguy)->ochar!=FT_SK && (current_proc->pdata.p_otherguy)->ochar!=FT_MOTARO)
		{
			if (strike_check_a0(obj,0x20)==SYSTEM_CARRY_SET) 
			{
				if (f_block==1)
					zoom_blocked(obj);
				else noob_hit();
			}
		}
	}
	while(obj->oyvel.pos<0);
	
	if (obj->oypos.u.intpos<current_proc->pdata.p_ganiy)
		goto NOOB_DROP;
	
	stop_me(obj);
	ground_player(obj);
	reaction_exit(obj);	
}

void stat_do_rain_bolt(void) 
{
	OBJECT *obj=current_proc->pa8;
	short xpos;

	init_special_act(ACT_RAIN_BOLT,obj);
	
	update_tsl(l_zap,obj);
	
	/* get other dudes position */
	xpos=(current_proc->pdata.p_otherguy)->oxpos.u.intpos;

	animate2_a9(0x2,ANIM_ERMAC_SLAM);
	
	/* create lightning process */
	get_char_ani(ANIM_TABLE2,ANIM_RAIN_BOLT);		
	get_proj_obj_m(obj);
	insert_object((OBJECT *)current_proc->a10,&objlst);

   	((OBJECT *)current_proc->a10)->oxpos.u.intpos=xpos;	
   	((OBJECT *)current_proc->a10)->oypos.u.intpos=(current_proc->pdata.p_otherproc)->pdata.p_ganiy;	
	create_proj_proc(rain_bolt_proc);

	/* emsl5 */
	current_proc->pdata.p_action=ACT_RAIN_BOLT_SD;

	process_sleep(0x10);

	backwards_ani2(2,ANIM_ERMAC_SLAM);

	reaction_exit(obj);
}

void rain_bolt_proc(void) 
{
	OBJECT *obj=current_proc->pa8;

	obj->ozval=FRONT_Z+50;
	flip_multi(obj);
	multi_adjust_xy(obj,-44,-70);	
	
	/* create bolt */
	get_char_ani(ANIM_TABLE2,ANIM_RAIN_BOLT);		
	mframew(4);
	
	borrow_ochar_sound(0xd,FT_INDIAN);
	
	/* flash bolt */
	init_anirate(4);
	current_proc->a11=15;
	/* rbp4 */
	do
	{
		process_sleep(1);
		next_anirate();
		if ((current_proc->pdata.p_otherguy)->ochar!=FT_MOTARO) 
		{
			if (strike_check_a0(obj,0x1c)==SYSTEM_CARRY_SET) 
				break;
		}
	}
	while(GET_LONG(current_proc->pa9)!=ANI_END);
	
	shake_a11(12,6);
	
	rsnd_enemy_boom();
	
	process_sleep(3);
	
	/* finish bolt off */
	delete_slave();
	find_ani2_part_a14(ANIM_RAIN_BOLT,3);
	mframew(5);
	
	delete_proj_and_die(obj);
}

void stat_do_noob_ego(void) 
{
	PROCESS *ptemp;
	OBJECT *obj=current_proc->pa8;
	
	init_special_act(ACT_NOOB_EGO,obj);
	
	update_tsl(l_decoy,obj);
	
	pose_a9(0,ANIM_STANCE);
	
	process_sleep(3);
	
	ptemp=CREATE(PID_NOOB_EGO,noob_ego);
	ptemp->pdata.p_store1=(ADDRESS)current_proc;
	ptemp->pdata.p_otherguy=current_proc->pdata.p_otherguy;
	ptemp->pdata.p_otherproc=current_proc->pdata.p_otherproc;
	ptemp->pdata.p_ganiy=current_proc->pdata.p_ganiy;
	p1p2_pid_stuff(ptemp,current_proc->pa8,PID_P1_EGO,PID_P2_EGO);
	
	current_proc->pdata.p_action=ACT_NOOB_EGO_SD;
	stop_me(current_proc->pa8);
	
	process_sleep(0x8);

	reaction_exit(obj);
}

WORD q_ego_toss_check(void) 
{
	int edgedist;
	
	OBJECT *obj=current_proc->pa8;
	OBJECT *obj_other=current_proc->pdata.p_otherguy;

	if (q_is_he_a_boss()==SYSTEM_CARRY_SET)
		return(SYSTEM_CARRY_CLR);					// boss cant be flipped

	if (obj_other->oflags2 & M_NOFLIP)
		return(SYSTEM_CARRY_CLR);					// check to see if allowed to be flipped?

	if (is_he_airborn()==SYSTEM_CARRY_SET)
		return(SYSTEM_CARRY_CLR);					// cant toss if hes airborn

	if (get_x_dist>0x30)
		return(SYSTEM_CARRY_CLR);					// dudes are to far apart

	/* we are close enough !! */

	if (get_his_action(current_proc) == ACT_LAND)
		return(SYSTEM_CARRY_CLR);					// cant toss when other dude is landing

	/* no throwing when near a wall */
TOSS_OK:
	if (am_i_joy()==SYSTEM_CARRY_SET)
	{
		if (is_he_right(current_proc)==SYSTEM_CARRY_SET)				// get edge that is behind me
			edgedist=abs(obj->oxpos.u.intpos-left_edge);
		else edgedist=abs(obj->oxpos.u.intpos-right_edge-SCRRGT);

		if (edgedist<CLOSE_TO_EDGE+8)
			return(SYSTEM_CARRY_CLR);					// close to edge --> no throwing
	}

TCHK4:
	return(SYSTEM_CARRY_SET);						// joy is not away --> ok to flip
}

/* use p_store1 to get positional info */
void noob_ego(void) 
{
	OBJECT *ego,*noob;
	WORD block;
	
	p1p2_pid_stuff(current_proc,current_proc->pa8,PID_P1_EGO,PID_P2_EGO);
	borrow_ochar_sound(1,FT_ST);
	
	/* create new noob guy */
	noob=current_proc->pa8;			// get orignal noob object
	get_char_ani(ANIM_TABLE1,ANIM_RUN);
	current_proc->a10=(ADDRESS)gmo_proc_special(noob->odict,noob->oheap,PFLAG_PALLOAD);			// get obj for fake player
	ego=current_proc->pa8;
	ego->ochar=FT_NOOB;		// set fake players ochar

	ground_ochar();
	match_ani_points(noob,ego);		// set them together
	ego->ozval=noob->ozval+20;		// put him in front
	current_proc->pdata.p_flags|=PM_ALT_PAL;
	player_normpal();
	insert_object(ego,&objlst);
	
	/* run towards the dude */
	get_char_ani(ANIM_TABLE1,ANIM_RUN);
	set_proj_vel(ego,SCX(0xd0000),3);
	
	/* run towards other dude 
		if close enough and other dude not blocking 
			then throw dude
		else if close and blocking then ego explode
		
		if goes past otherguy then run off screen and die
	*/
	current_proc->a10=0x20;
	/* repd3 */
	do
	{
		process_sleep(1);
		do_next_a9_frame(ego);
		if (q_ego_toss_check()==SYSTEM_CARRY_SET) 
		{
			if (is_he_blocking(&block,1)==SYSTEM_CARRY_SET && q_is_he_noob_zap()==SYSTEM_CARRY_CLR)
				break;
			else
			{
				current_proc->pa8=ego;
				ego_hit();
			}
		}
		
		if (proj_onscreen_test(ego)==SYSTEM_CARRY_CLR) 
			goto EGO_DEAD;
	}
	while(--current_proc->a10>0);
	
	/* ego blocked or ran outa time, so blow up */
	stop_a8(ego);
//	get_char_ani(ANIM_TABLE2,ANIM_NOOB_EGO_EXP);
//	mframew(4);
	set_inviso(ego);
	
	/* send pieces everywhere */
	create_fx(FX_NOOB_EGO_EXP);

	process_sleep(1);		// make sure ego explodes before dealloc info
	borrow_ochar_sound(0x15,FT_ROBO2);
	
EGO_DEAD:	
	delobjp(ego);			// release ego
	
	process_sleep(2);
	
	process_suicide();		// kill routine
}

void thrown_by_ego(void) 
{
	OBJECT *obj=current_proc->pa8;

	if ((long)current_proc->pdata.p_store8<0)
		set_x_vel(obj,SCX(0x38000));
	else set_x_vel(obj,-SCX(0x38000));
	
	flight(obj,DONT_TOUCH,-SCY(0xb8000),SCY(0x8000),2,ANIM_FFLIP);
	
	damage_to_me(0x8,obj);
	
	land_on_my_back();
}

void ego_hit(void)
{
	OBJECT *obj=current_proc->pa8;
	OBJECT *other;
	PROCESS *pother;
	long xvel=obj->oxvel.pos;
	WORD ta0;
	short dist;
	WORD dmask;

	/* perform the throw */
	stop_me(obj);

	/* throw dude */
	body_slam_init(obj);
	disable_his_buttons;
	
	/* slide everyone across the screen */	//-u64a-
	get_char_ani(ANIM_TABLE1,ANIM_THROW);
	do_next_a9_frame(obj);
	other=(current_proc->pdata.p_otherproc)->pdata.p_otherguy;
	set_noedge(other);
	
	obj->oxvel.pos=xvel-(xvel>>2);
	dist=obj->oxpos.u.intpos-(current_proc->pdata.p_otherguy)->oxpos.u.intpos;
	
	do
	{
		(current_proc->pdata.p_otherguy)->oxpos.u.intpos=obj->oxpos.u.intpos-dist;
		process_sleep(1);
		
		get_his_dfe();
		if (obj->oxvel.pos>0 && current_proc->a6<80)
			break;
		
		if (obj->oxvel.pos<0 && current_proc->a5<80)
			break;
		
		if (abs((current_proc->pdata.p_otherguy)->oxpos.u.intpos-other->oxpos.u.intpos)>210)
			break;
	}
	while(1);
	
	stop_me(obj);		//-u64a-
	clear_noedge(other);

	f_norepell=0x20;
	grab_animation(3);
	process_sleep(3);

	throw_voice();
	
	do
	{
		
		/* set other dudes otherguy to point to alter ego, need for adjust_offset_xy to work */
		other=(current_proc->pdata.p_otherproc)->pdata.p_otherguy;
		(current_proc->pdata.p_otherproc)->pdata.p_otherguy=obj;
		pother=(current_proc->pdata.p_otherproc)->pdata.p_otherproc;
		(current_proc->pdata.p_otherproc)->pdata.p_otherproc=current_proc;
		
		dmask=(double_next_a9() & SYSTEM_ZERO_MASK);
	
		/* restore otherdudes otherguy */
		(current_proc->pdata.p_otherproc)->pdata.p_otherguy=other;
		(current_proc->pdata.p_otherproc)->pdata.p_otherproc=pother;
		
		if (dmask==SYSTEM_ZERO_SET)
			break;
		
		process_sleep(3);
	}
	while (1);
	
	f_norepell=0x20;					// disable repell
	
	xfer_to_thrown(thrown_by_ego);
	(current_proc->pdata.p_otherproc)->pdata.p_store8=xvel;
	
	process_sleep(8);
	mframew(3);


	/* resume running offscreen */
	obj->oxvel.pos=xvel;
	get_char_ani(ANIM_TABLE1,ANIM_RUN);
	do
	{
		process_sleep(2);
		do_next_a9_frame(obj);
	}
	while (proj_onscreen_test(obj)==SYSTEM_CARRY_SET);

	/* i am dead */
	delobjp(obj);
	
	process_sleep(2);
	process_suicide();
}

void r_rain_bolt(void) 
{
	
	current_proc->pdata.p_hitby=ACT_ORBBED;

	reaction_start(REACT_START,NULL,0,NULL);
	
	create_fx(FX_SMOKE_LIGHTNING);
	
	rsnd_react_voice();

	set_half_damage(current_proc->pa8);
	
	process_sleep(2);
	
	flight(current_proc->pa8,0,-SCY(0xc4000),SCY(0x5000),4,ANIM_ORB_BANGED);
	stop_me(current_proc->pa8);
	land_on_my_back();
}

void r_noob_zap(void)
{
	tsound(0x1);	//-SOUND effect
	reaction_start(REACT_START,NULL,0,NULL);
	
	if (q_am_i_noob_zap()==SYSTEM_CARRY_CLR)
	{
		CREATE(PID_NOOB_ZAP_FLASH,noob_zap_flash)->a10=(ADDRESS)current_proc;	// who to flash
	}
	else
	{
		((PROCESS *)current_proc->a0)->pdata.p_store8=1;
		takeover_him(r_noob_zap);
	}
	
	away_x_vel(current_proc,current_proc->pa8,SCX(0x40000));
	animate_a9(4,ANIM_STUMBLE);
	reaction_exit(current_proc->pa8);
}

extern void *a_ghost_circle[];
extern OIMGTBL *GHOSTCPLOOP1[];
extern BYTE ghost_dict[];
void noob_ghost(void) 
{
	OBJECT *obj=current_proc->pa8;		// dude to circle
	OBJECT *obj_circle;
	PROCESS *flasher=(PROCESS *)current_proc->pdata.p_store8;

	/* create ghost */
	gso_dmawnz(obj_circle,(ADDRESS)GHOSTCPLOOP1,ghost_dict,0,0);
	alloc_cache(GHOSTCPLOOP1,0,obj_circle);
	obj_circle->ozval=FRONT_Z+5;
	insert_object(obj_circle,&objlst);

	/* circle until flash is done */
	current_proc->pa9=a_ghost_circle;
	init_anirate(4);
	do
	{
		obj_circle->oxpos.u.intpos=obj->oxpos.u.intpos;
		obj_circle->oypos.u.intpos=obj->oypos.u.intpos;
		adjust_xy_a5(obj_circle,-46,26);
		
		next_anirate();
		
		/* make dude being flashed xlu */
		obj->oflags|=M_XLU_ON;
		obj->oflags&=0x00ff;
		obj->oflags|=HALF_XLU;
		
		/* make otherguy invincible */
		set_nocol(flasher->pdata.p_otherguy);
		set_noflip(flasher->pdata.p_otherguy);
		
		process_sleep(1);
	}
	while(flasher->p_comp_flag==PC_NOOB_GHOST);
	
	/* make otherguy hurtable */
	clear_nocol(flasher->pdata.p_otherguy);
	clear_noflip(flasher->pdata.p_otherguy);
	obj->oflags&=~M_XLU_ON;
	
	/* dissapte */
	current_proc->pa9=a_ghost_circle;
	
	find_part2();
	framew(3);
	
	delobjp(obj_circle);
	
	process_suicide();
}

void noob_zap_flash(void) 
{
	PROCESS *ta13;
	WORD snd;
	WORD pid;

	pid=(current_proc->pa8==p1_obj)?PID_NOOB_ZAP_FLASH1:PID_NOOB_ZAP_FLASH2;
	
	ta13=process_exist(pid,-1);
	if ( ta13!=NULL )
	{
		/* i can only be zapped once */
		if ( ta13->a10==current_proc->a10 )
		{
			process_suicide();
		}
	}

	current_proc->procid=pid;
	
	/* create rings of ghosts routine */
	current_proc->pdata.p_otherguy=((PROCESS *)current_proc->a10)->pdata.p_otherguy;
	current_proc->pdata.p_otherproc=((PROCESS *)current_proc->a10)->pdata.p_otherproc;
	CREATE(PID_NOOB_GHOST,noob_ghost)->pdata.p_store8=(ADDRESS)current_proc;
	
	/* noobf3 */
	current_proc->pdata.p_store8=40;
	snd=1;
	do
	{
		player_swpal((PROCESS *)current_proc->a10,white_p,current_proc->pa8);
		current_proc->p_comp_flag=PC_NOOB_GHOST;
		process_sleep(3);
		current_proc->p_comp_flag=PC_CLEAR;
		jade_normpal();
		current_proc->p_comp_flag=PC_NOOB_GHOST;
		process_sleep(3);
		current_proc->p_comp_flag=PC_CLEAR;

		if (--snd==0)
		{
//			ochar_sound_stop(0xc);
			borrow_ochar_sound(0xc,FT_NOOB);		
			snd=12;
		}
	}
	while(--current_proc->pdata.p_store8>0);

	jade_normpal();
	
	process_sleep(2);
	
	process_suicide();
}

extern void redirect_scroller(FUNC p_ar7);
void r_rain_roundhouse(void)
{
	long ta10;
	
	ta10=((((current_proc->pdata.p_damage)<<16) /FULL_STRENGTH)*0x64)>>16;    // pass % of damage this combo did
	if (ta10>30)
		set_half_damage(current_proc->pa8);

	current_proc->pdata.p_hitby=ACT_RHOUSE;
	create_blood_proc(BLOOD_ROUNDHOUSE);

	group_sound(2);					// group speech: wasted
	rsnd_big_smack();
	shake_a11(0x0006,0x0006);

	reaction_start(REACT_START,NULL,1,cc_ken_masters);

	redirect_scroller(scorp_tele_scroll);
	set_noedge(current_proc->pa8);
	
	current_proc->a6=rain_scan;
	flight_call(current_proc->pa8,SCX(0x8c000),-SCY(0xb0000),SCY(0x8900),5,ANIM_KDOWN);

	land_on_my_back();
}

void rain_scan(void) 
{
	OBJECT *obj=current_proc->pa8;
	
	if (obj->oxvel.pos==0)
		return;

	if (obj->oxvel.pos<0) 
	{
		current_proc->a0=obj->oxpos.u.intpos;
		current_proc->a1=worldtlx.u.intpos;
		current_proc->a3=worldtlx.u.intpos+SCRRGT;
	}
	else
	{
		current_proc->a1=obj->oxpos.u.intpos;
		current_proc->a0=worldtlx.u.intpos+SCRRGT;
		current_proc->a3=worldtlx.u.intpos;
	}

	/* stc5 */
	if ((long)current_proc->a1<(long)current_proc->a0)
		return;

	/* teleport part */
	obj->oxpos.u.intpos=(short)current_proc->a3;
	current_proc->pdata.p_store4=(ADDRESS)NULL;
	clear_inviso(obj);
	clear_noedge(obj);
	
	return;
}

	.align 2
	.globl sm_noob_lpc
sm_noob_lpc:
	.half	p1b1     		/* player 1 requirements */
	.half	p2b1      		/* player 2 requirements */
	.word	x_ground
	.word	0				/* yes/no routine */
	.word	do_noob_zap		/* address of secret move */
	.half	0x15
	.half	sw_right
	.half	sw_down
	.half	0
	.half	0
	.half	0
	.half	0
	.half	sw_left
	.half	sw_down
	.half	0
	.half	0
	.half	0
	.half	0
	.half	0					/* added field */

	.half	p1b1     		/* player 1 requirements */
	.half	p2b1      		/* player 2 requirements */
	.word	x_baby
	.word	q_babality	
	.word	do_baby 	
	.half	0x28
	.half	sw_right
	.half	sw_right
	.half	sw_right
	.half	0
	.half	0
	.half	0
	.half	sw_left
	.half	sw_left
	.half	sw_left
	.half	0
	.half	0
	.half	0
	.half	0					/* added field */

	.half 	0

	.align 2
	.globl sm_noob_hpc
sm_noob_hpc:
	.half 	p1b0     		/* player 1 requirements */
	.half 	p2b0      		/* player 2 requirements */
	.word	x_ground
	.word	q_noob_ego				/* yes/no routine */
	.word	do_noob_alterego		/* address of secret move */
	.half	0x10	   	/* time to do entire switch combo */
	.half	sw_right
	.half	sw_right
	.half	0
	.half	0
	.half	0
	.half	0
	.half	sw_left
	.half	sw_left
	.half	0
	.half	0
	.half	0
	.half	0

	.half	0					/* added field */
	.half 	0

	.align 2
	.globl sm_noob_hkc
sm_noob_hkc:
	.half 	p1b3     		/* player 1 requirements */
	.half 	p2b3      		/* player 2 requirements */
	.word	x_fatal
	.word	q_half_screen_fatal		
	.word	do_fatality_1		/* address of secret move */
	.half	0x30	   	/* time to do entire switch combo */
	.half	sw_right
	.half	sw_right
	.half	sw_left
	.half	sw_left
	.half	0
	.half	0
	.half	sw_left
	.half	sw_left
	.half	sw_right
	.half	sw_right
	.half	0
	.half	0

	.half	0					/* added field */
	.half 	0

	.align 2
	.globl sm_noob_uc
sm_noob_uc:
	.half 	p1b0|p1b1|p1b3|p1b4     		/* player 1 requirements */
	.half 	p2b0|p2b1|p2b3|p2b4      		/* player 2 requirements */
	.word	x_ground
	.word	q_noob_slam				/* yes/no routine */
	.word	do_noob_slam		/* address of secret move */
	.half	0x10	   	/* time to do entire switch combo */
	.half	sw_up
	.half	sw_down
	.half	0
	.half	0
	.half	0
	.half	0
	.half	sw_up
	.half	sw_down
	.half	0
	.half	0
	.half	0
	.half	0

	.half	0					/* added field */
	.half 	0
			 
	.align 2
	.globl sm_noob_bc
sm_noob_bc:
	.half	p1b2
	.half	p2b2
	.word	x_ground
	.word   q_pit_fatal		
	.word	do_pit_fatality 	
	.half	0x18
	.half	sw_right
	.half	sw_down
	.half	0
	.half	0
	.half	0
	.half	0
	.half	sw_left
	.half	sw_down
	.half	0
	.half	0
	.half	0
	.half	0
	.half	0					
	
	.word	0

	.align 2
	.globl sm_noob_rc
sm_noob_rc:
	.half	p1b5|p1b2
	.half	p2b5|p1b2
	.word	x_fatal
	.word   q_fatality_req
	.word	do_fatality_2
	.half	0x30
	.half	sw_up
	.half	sw_down
	.half	sw_down
	.half	0
	.half	0
	.half	0
	.half	sw_up
	.half	sw_down
	.half	sw_down
	.half	0
	.half	0
	.half	0
	.half	0					
	
	.word	0

	.align 2
	.globl sm_rain_lpc
sm_rain_lpc:
	.half	p1b1
	.half	p2b1
	.word	x_ground
	.word   q_pit_fatal		
	.word	do_pit_fatality 	
	.half	0x18
	.half	sw_right
	.half	sw_down
	.half	sw_right
	.half	0
	.half	0
	.half	0
	.half	sw_left
	.half	sw_down
	.half	sw_left
	.half	0
	.half	0
	.half	0
	.half	0					
	
	.half	p1b1
	.half	p2b1
	.word	x_friend
	.word	q_friend		
	.word	do_friendship
	.half	0x18
	.half	sw_right
	.half	sw_right
	.half	sw_right
	.half	0
	.half	0
	.half	0
	.half	sw_left
	.half	sw_left
	.half	sw_left
	.half	0
	.half	0
	.half	0
	.half	0					
	
	.word	0


	.align 2
	.globl sm_rain_hpc
sm_rain_hpc:
	.half 	p1b0     		/* player 1 requirements */
	.half 	p2b0      		/* player 2 requirements */
	.word	x_ground
	.word	q_rain_zap				/* yes/no routine */
	.word	do_rain_zap		/* address of secret move */
	.half	0x18	   	/* time to do entire switch combo */
	.half	sw_right
	.half	sw_down
	.half	0
	.half	0
	.half	0
	.half	0
	.half	sw_left
	.half	sw_down
	.half	0
	.half	0
	.half	0
	.half	0
	.half	0					/* added field */
	
	.half	p1b0     		/* player 1 requirements */
	.half	p2b0      		/* player 2 requirements */
	.word	x_baby
	.word	q_babality	
	.word	do_baby 	
	.half	0x28
	.half	sw_left
	.half	sw_left
	.half	sw_right
	.half	0
	.half	0
	.half	0
	.half	sw_right
	.half	sw_right
	.half	sw_left
	.half	0
	.half	0
	.half	0
	.half	0					/* added field */

	.half 	p1b0     		/* player 1 requirements */
	.half 	p2b0      		/* player 2 requirements */
	.word	x_ground
	.word	q_rain_bolt				/* yes/no routine */
	.word	do_rain_bolt		/* address of secret move */
	.half	0x14	   	/* time to do entire switch combo */
	.half	sw_left
	.half	sw_left
	.half	0
	.half	0
	.half	0
	.half	0
	.half	sw_right
	.half	sw_right
	.half	0
	.half	0
	.half	0
	.half	0
	.half	0					/* added field */

	.half 	p1b0     		/* player 1 requirements */
	.half 	p2b0      		/* player 2 requirements */
	.word	x_fatal
	.word	q_close_fatal				/* yes/no routine */
	.word	do_fatality_1		/* address of secret move */
	.half	0x18	   	/* time to do entire switch combo */
	.half	sw_down
	.half	sw_right
	.half	sw_right
	.half	0
	.half	0
	.half	0
	.half	sw_down
	.half	sw_left
	.half	sw_left
	.half	0
	.half	0
	.half	0
	.half	0					/* added field */
	
	.half 	0


	.align 2
	.globl sm_rain_hkc
sm_rain_hkc:
	.half 	p1b3     		/* player 1 requirements */
	.half 	p2b3      		/* player 2 requirements */
	.word	x_fatal
	.word	q_tongue_fatal				/* yes/no routine */
	.word	do_fatality_2		/* address of secret move */
	.half	0x38	   	/* time to do entire switch combo */
	.half	sw_right
	.half	sw_left
	.half	sw_down
	.half	sw_down
	.half	0
	.half	0
	.half	sw_left
	.half	sw_right
	.half	sw_down
	.half	sw_down
	.half	0
	.half	0
	.half	0					/* added field */
	
	.half 	0


	.align 2
	.globl ct_rain_elbow2
ct_rain_elbow2:
	.half	9|last_option			
	.half	0x1303|0x8000
	.half	c_speed2|cb_hipunch		
	.half	0x8002				
	.half	stk_0|req_none			
	.half	0
	.word	ct_rain_elbow3

	.align 2
	.globl ct_rain_elbow4
ct_rain_elbow4:
	.half	9|last_option			
	.half	0x1301|0x8000
	.half	c_speed2|cb_hipunch		
	.half	0x8002
	.half	stk_4|req_none			
	.half	0
	.word	0x0f

	.align 2
	.globl ct_rain_knee2
ct_rain_knee2:
	.half	9|last_option			
	.half	0x1305|0x8000
	.half	c_speed1|cb_hikick
	.half	retract_knee
	.half	stk_1|req_none			
	.half	0
	.word	ct_rain_knee3
	
	.align 2
	.globl ct_rain_knee3
ct_rain_knee3:
	.half	9
	.half	0x1306|0x8000
	.half	c_speed2|cb_lokick
	.half	retract_hikick
	.half	stk_1|req_none			
	.half	0
	.word	ct_rain_knee4
	
	.align 2
	.globl ct_rain_elbow3
ct_rain_elbow3:
	.half	9|last_option			
	.half	0x1303|0x8000
	.half	c_speed2|cb_lopunch		
	.half	0x8002				
	.half	stk_0|req_none			
	.half	0
	.word	ct_rain_elbow4

	.align 2
	.globl ct_rain_knee4
ct_rain_knee4:
	.half	9|last_option			
	.half	0x1305|0x8000
	.half	c_speed2|cb_hikick
	.half	retract_lokick
	.half	stk_1w|req_none			
	.half	0
	.word	ct_rain_knee5

	.align 2
	.globl ct_rain_knee5
ct_rain_knee5:
	.half	9|last_option			
	.half	cb_jump_address
	.half	cb_hikick
	.half	retract_hikick
	.half	req_stkaway
	.half	0
	.word	do_roundhouse

	.align 2
	.globl ct_noob_elbow2
ct_noob_elbow2:
	.half	9|last_option			
	.half	atk_elbow3
	.half	c_speed2|cb_hipunch		
	.half	0x8002
	.half	stk_1|req_none			
	.half	0
	.word	ct_noob_elbow3

	.align 2
	.globl ct_noob_elbow3
ct_noob_elbow3:
	.half	9|last_option			
	.half	0x1303|0x8000
	.half	c_speed2|cb_lopunch		
	.half	0x8002
	.half	stk_0|req_none			
	.half	0
	.word	ct_noob_elbow4

	.align 2
	.globl ct_noob_elbow4
ct_noob_elbow4:
	.half	9|last_option			
	.half	0x1303|0x8000
	.half	c_speed2|cb_hikick
	.half	0x8002
	.half	stk_5|req_none			
	.half	0
	.word	0x10

	.align 2
	.globl ct_noob_knee2
ct_noob_knee2:
	.half	9|last_option			
	.half	0x1306|0x8000
/* 	.half	atk_lokick */
	.half	c_speed1|cb_lokick
	.half	retract_knee
	.half	stk_1|req_none			
	.half	0
	.word	ct_noob_knee3

	.align 2
	.globl ct_noob_knee3
ct_noob_knee3:
	.half	9|last_option			
	.half	0x1306|0x8000
/* 	.half	atk_lokick */
	.half	c_speed1|cb_lokick
	.half	retract_knee
	.half	stk_1|req_none			
	.half	0
	.word	ct_noob_knee4

	.align 2
	.globl ct_noob_knee4
ct_noob_knee4:
	.half	9|last_option			
	.half	0x1306|0x8000
/* 	.half	atk_lokick */
	.half	c_speed1|cb_lokick
	.half	retract_knee
	.half	stk_4|req_none			
	.half	0
	.word	0x10

